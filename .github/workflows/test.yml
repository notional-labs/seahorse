# Borrowed from: https://github.com/manjaro-arm/rpi4-images/releases

name: image_build_all-dev
on:
  workflow_dispatch:
  schedule:
    - cron:  '30 2 * * 1'

jobs:
  prepare_release:
    runs-on: ubuntu-latest
    steps:
      - 
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - 
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDD'
      - 
        id: release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
          release_name: Dev ${{ steps.time.outputs.time }}
          draft: false
          prerelease: true
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_id: ${{ steps.release.outputs.id }}

  release:
    runs-on: ubuntu-20.04
    needs: prepare_release
    strategy:
      matrix:
        DEVICE: [rpi4,pbpro,rockpro64,rockpi4b,rockpi4c,on2,on2-plus,oc4,oc2,pinebook,pine64-lts,pine64,pine-h64,rock64,roc-cc,nanopc-t4,vim3,vim2,vim1,gt1-ultimate]
        EDITION: [minimal]
        BRANCH: [unstable]
    steps:
      - 
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - 
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDD'
      -
        id: image-build
        uses: manjaro-arm/rootfs@master
        with:
          device: ${{ matrix.device }}
          edition: ${{ matrix.edition }}
          branch: ${{ matrix.branch }}
          version: ${{ steps.time.outputs.time }}
          #CI_PUB_KEY: "${{ secrets.CI_PUB_KEY }}"
          #CI_GPG_SECRET: "${{ secrets.CI_GPG_SECRET }}"
          #CI_GPG_PASSPHRASE: "${{ secrets.CI_GPG_PASSPHRASE }}"
      - 
        id: upload_release 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ env.FILE_PATH }}
          asset_name: ${{ env.FILE_PATH }}
          asset_content_type: application/x-iso-image
      - 
        id: upload_sha1
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ env.FILE_SHA1 }}
          asset_name: ${{ env.FILE_SHA1 }}
          asset_content_type: text/plain
      - 
        id: upload_torrent
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ env.FILE_TORRENT }}
          asset_name: ${{ env.FILE_TORRENT }}
          asset_content_type: application/x-bittorrent
#      - 
#        id: upload_sig
#        uses: actions/upload-release-asset@v1.0.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
#          asset_path: ./${{ env.FILE_SIG }}
#          asset_name: ${{ env.FILE_SIG }}
#          asset_content_type: text/plain
      - 
        id: upload_pkg
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ env.FILE_PKG }}
          asset_name: ${{ env.FILE_PKG }}
          asset_content_type: text/plain
      - 
        name: rollback_release
        if: failure()
        uses: author/action-rollback@stable
        with:
          release_id: ${{ needs.prepare_release.outputs.release_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
